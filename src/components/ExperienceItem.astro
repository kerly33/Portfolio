---
export interface Props {
  date: string;
  title: string;
  company: string;
  description: string;
  link?: string /* ? el link es undefined */;
}
const { date, title, company, description, link } = Astro.props;
---

<span
  class="absolute flex items-center justify-center w-5 h-5 bg-blue-100 rounded-full -start-3
ring-4 ring-white ">
  <svg
    class="w-3 h-3 text-blue-800 dark:text-blue-900"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    fill="currentColor"
    viewBox="0 0 20 20">
    <path
      d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 
      0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 
      2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
  </svg>
</span>
<h3
  class="flex items-center mb-1 text-lg font-semibold text-yellow-200/90 opacity-90 ">
    {title}
</h3>
<h4 class="font-semibold text-xl text-gray-600 dark:text-white">{company}</h4>

<time
  class="block mb-2 text-sm font-normal mt-4 leading-none text-sky-200/90">
  {date}
</time>
<p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400 text-pretty">
  {description}
</p>
<!-- {
  link && (
    <a
      href="{link}"
      class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900
 bg-white border border-gray-200 rounded-lg hover:bg-gray-100
 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none
 focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400
 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700
 dark:focus:ring-gray-700">
      Saber m√°s ... {""}
      <svg
        class="w-3 h-3 ms-2 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10">
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"/>
      </svg>
    </a>
  )
} -->
